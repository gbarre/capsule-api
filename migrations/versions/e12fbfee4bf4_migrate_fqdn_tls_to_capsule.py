"""migrate fqdn-tls to capsule

Revision ID: e12fbfee4bf4
Revises: 4e0b088cdf8e
Create Date: 2021-02-02 14:41:37.153056

"""
from alembic import op
import sqlalchemy as sa
import models
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'e12fbfee4bf4'
down_revision = '4e0b088cdf8e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('capsules', sa.Column('delegate_fqdns', sa.Boolean(), nullable=False))
    op.add_column('capsules', sa.Column('delegate_tls', sa.Boolean(), nullable=False))
    op.add_column('capsules', sa.Column('tls_crt', sa.Text(), nullable=True))
    op.add_column('capsules', sa.Column('tls_key', sa.Text(), nullable=True))
    op.add_column('capsules', sa.Column('tls_redirect_https', sa.Boolean(), nullable=False))
    op.drop_column('capsules', 'delegate_webapp_admin')
    op.add_column('fqdns', sa.Column('capsule_id', models.GUID(), nullable=True))

    op.create_foreign_key(None, 'fqdns', 'capsules', ['capsule_id'], ['id'])

    # Replace webapp_ids by capsule_ids in fqdns table (look in capsules table for matching)
    op.execute("UPDATE fqdns f, capsules c SET f.capsule_id = c.id WHERE c.webapp_id = f.webapp_id;")

    # # Migrate tls data from webapps to capsules
    op.execute("UPDATE capsules c, webapps w "
        "SET "
            "c.tls_redirect_https = w.tls_redirect_https, "
            "c.tls_key = w.tls_key, "
            "c.tls_crt = w.tls_crt "
        "WHERE w.id = c.webapp_id")

    op.drop_constraint('fqdns_ibfk_1', 'fqdns', type_='foreignkey')

    # Cleanup old column
    op.drop_column('fqdns', 'webapp_id')
    op.drop_column('webapps', 'tls_key')
    op.drop_column('webapps', 'tls_crt')
    op.drop_column('webapps', 'tls_redirect_https')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('webapps', sa.Column('tls_redirect_https', sa.Boolean(), nullable=False))
    op.add_column('webapps', sa.Column('tls_crt', sa.Text(), nullable=True))
    op.add_column('webapps', sa.Column('tls_key',sa.Text(), nullable=True))
    op.add_column('fqdns', sa.Column('webapp_id', models.GUID(), nullable=True))
    op.drop_constraint('fqdns_ibfk_2', 'fqdns', type_='foreignkey')
    op.create_foreign_key('fqdns_ibfk_1', 'fqdns', 'webapps', ['webapp_id'], ['id'])

    # Replace webapp_ids by capsule_ids in fqdns table (look in capsules table for matching)
    op.execute("UPDATE fqdns f, capsules c SET f.webapp_id = c.webapp_id WHERE f.capsule_id = c.id;")

    # Migrate tls data from webapps to capsules
    op.execute("UPDATE capsules c, webapps w "
        "SET "
            "w.tls_redirect_https = c.tls_redirect_https, "
            "w.tls_key = c.tls_key, "
            "w.tls_crt = c.tls_crt "
        "WHERE w.id = c.webapp_id")

    # Cleanup old column
    op.drop_column('fqdns', 'capsule_id')
    op.add_column('capsules', sa.Column('delegate_webapp_admin', sa.Boolean(), nullable=False))
    op.drop_column('capsules', 'tls_redirect_https')
    op.drop_column('capsules', 'tls_key')
    op.drop_column('capsules', 'tls_crt')
    op.drop_column('capsules', 'delegate_tls')
    op.drop_column('capsules', 'delegate_fqdns')
    # ### end Alembic commands ###
